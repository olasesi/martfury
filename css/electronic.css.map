{"version":3,"sources":["themes/electronic/_button.scss","utils/_variable.scss","electronic.css","themes/electronic/_header.scss","themes/electronic/_slider.scss","utils/_mixin.scss","vendor/bourbon/addons/_prefixer.scss","vendor/_media_query.scss","themes/electronic/_pages.scss"],"names":[],"mappings":"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","file":"electronic.css","sourcesContent":[".ps-btn, button.ps-btn {\r\n    background-color: $color-electronic;\r\n    color: #ffffff;\r\n    &:hover {\r\n        background-color: darken($color-electronic, 5%);\r\n    }\r\n}","$font-1st: 'Work Sans', sans-serif;\r\n$font-2nd: 'Libre Baskerville', serif;\r\n$font-3rd: 'Playfair Display', serif;\r\n$home: true !default;\r\n\r\n$color-1st: #fcb800;\r\n$color-layout-2-1st: #dd2400;\r\n$color-autopart: #dd2400;\r\n$color-technology: #0071df;\r\n$color-electronic: #dd2400;;\r\n$color-furniture: #fb7c00;;\r\n$color-organic: #5fa30f;\r\n$color-kids: #3e81ac;\r\n$color-photo: #c81919;\r\n$color-med: #28afb1;\r\n\r\n$color-2nd: #222222;\r\n$color-3rd: #5e6b9d;\r\n$color-heading: #000;\r\n$color-text: #666;\r\n$color-text-2: #555;\r\n$color-dark: #161824;\r\n$color-link: #06c;\r\n$color-success: #669900;\r\n$color-warning: #FAA806;\r\n$color-danger: #ec0101;\r\n$color-gray: #9e9e9e;\r\n$color-facebook: #3b5999;\r\n$color-twitter: #55acee;\r\n$color-google: #dd4b39;\r\n$color-linkedin: #0077B5;\r\n$color-instagram: #0077B5;\r\n$document-font-size: 14px;\r\n\r\n$timing: cubic-bezier(0.77, 0, 0.175, 1);\r\n$timing-1: cubic-bezier(0.7, 0, 0.3, 1);\r\n$timing-2: cubic-bezier(0.2, 1, 0.3, 1);\r\n",".ps-btn, button.ps-btn {\n  background-color: #dd2400;\n  color: #ffffff;\n}\n\n.ps-btn:hover, button.ps-btn:hover {\n  background-color: #c42000;\n}\n\n.header--electronic {\n  background-color: #022335;\n}\n\n.header--electronic .header__extra i {\n  color: #ffffff;\n}\n\n.header--electronic .header__extra span {\n  background-color: #dd2400;\n}\n\n.header--electronic .header__extra span i {\n  color: #ffffff;\n}\n\n.header--electronic .header__extra:hover > i {\n  color: #dd2400;\n}\n\n.header--electronic .header__extra:hover span {\n  color: #dd2400;\n}\n\n.header--electronic .ps-block--user-header i {\n  color: #ffffff;\n}\n\n.header--electronic .ps-block--user-header a {\n  color: #ffffff;\n}\n\n.header--electronic .ps-block--user-header a:hover {\n  color: #dd2400;\n}\n\n.header--electronic .ps-form--quick-search input {\n  border-right: none;\n}\n\n.header--electronic .ps-form--quick-search button {\n  background-color: #dd2400;\n  color: #ffffff;\n}\n\n.header--electronic .header__top {\n  background-color: #022335;\n}\n\n.header--electronic .header__top .header__left p {\n  color: #ffffff;\n}\n\n.header--electronic .header__top .header__top-links > li > a {\n  color: #ffffff;\n}\n\n.header--electronic .header__top .header__top-links .ps-dropdown > a {\n  color: #ffffff;\n}\n\n.header--electronic .header__content {\n  background-color: #022335;\n}\n\n.header--electronic .header__content .menu--product-categories {\n  display: block;\n}\n\n.header--electronic .header__content .menu--product-categories .menu__toggle i {\n  color: #ffffff;\n}\n\n.header--electronic .header__content .menu--product-categories .menu__toggle span {\n  display: none;\n}\n\n.header--electronic .navigation {\n  background-color: #022335;\n}\n\n.header--electronic .menu--electronic > li > a {\n  color: #ffffff;\n  font-size: 16px;\n  text-transform: uppercase;\n  font-weight: 600;\n}\n\n.header--electronic .menu--electronic > li > a i {\n  vertical-align: middle;\n  margin-right: 6px;\n  font-size: 20px;\n}\n\n.header--electronic .menu--electronic > li > a:hover {\n  color: #dd2400;\n}\n\n.header--electronic.header--sticky .header__content {\n  background-color: #022335;\n}\n\n.header--electronic.header--sticky .header__content .menu--product-categories .menu__toggle span {\n  display: block;\n  color: #ffffff;\n}\n\n.header--mobile.electronic {\n  background-color: #fff;\n}\n\n.header--mobile.electronic .ps-cart--mini {\n  text-align: left;\n}\n\n.header--mobile.electronic .header__actions .ps-cart--mini > a {\n  color: #ffffff;\n}\n\n.header--mobile.electronic .header__actions .ps-cart--mini > a span {\n  background-color: #dd2400;\n}\n\n.header--mobile.electronic .header__actions .ps-block--user-header .ps-block__left i {\n  color: #ffffff;\n}\n\n.header--mobile.electronic .navigation--mobile {\n  background-color: #022335;\n}\n\n.header--mobile.electronic .ps-search--mobile {\n  background-color: #dd2400;\n}\n\n.navigation--list .navigation__item.active i, .navigation--list .navigation__item.active span, .navigation--list .navigation__item:focus i, .navigation--list .navigation__item:focus span, .navigation--list .navigation__item:active i, .navigation--list .navigation__item:active span, .navigation--list .navigation__item:hover i, .navigation--list .navigation__item:hover span {\n  color: #dd2400;\n}\n\n.ps-panel--sidebar .ps-panel__header {\n  background-color: #dd2400;\n}\n\n.ps-banner--furniture {\n  position: relative;\n}\n\n.ps-banner--furniture h4 {\n  margin-bottom: 20px;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 400;\n  color: #0098ce;\n}\n\n.ps-banner--furniture h3 {\n  font-size: 36px;\n  font-weight: 300;\n  line-height: 1.2em;\n}\n\n.ps-banner--furniture h3 strong {\n  font-weight: 600;\n  color: #669900;\n}\n\n.ps-banner--furniture .ps-btn {\n  margin-top: 20px;\n  padding: 12px 24px;\n}\n\n.ps-banner--furniture .ps-banner__content {\n  max-width: 1200px;\n  width: 100%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  -moz-transform: translate(-50%, -50%);\n  -ms-transform: translate(-50%, -50%);\n  -o-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  padding-left: 140px;\n}\n\n@media (max-width: 1680px) {\n  .ps-banner--furniture h4 {\n    margin-bottom: 10px;\n  }\n  .ps-banner--furniture h3 {\n    font-size: 40px;\n    line-height: 1.2em;\n  }\n}\n\n@media (max-width: 1366px) {\n  .ps-banner--furniture h4 {\n    margin-bottom: 10px;\n    font-size: 16px;\n  }\n  .ps-banner--furniture h3 {\n    font-size: 40px;\n  }\n  .ps-banner--furniture h3 br {\n    display: none;\n  }\n}\n\n@media (max-width: 1199px) {\n  .ps-banner--furniture {\n    min-height: 400px;\n  }\n  .ps-banner--furniture img {\n    display: none;\n    visibility: hidden;\n    opacity: 0;\n  }\n  .ps-banner--furniture .ps-banner__content {\n    padding: 0 30px;\n  }\n}\n\n@media (max-width: 479px) {\n  .ps-banner--furniture h3 {\n    font-size: 24px;\n  }\n  .ps-banner--furniture p {\n    font-size: 12px;\n  }\n}\n\n#homepage-7 .ps-home-banner {\n  padding-top: 30px;\n  padding-bottom: 40px;\n}\n\n#homepage-7 .ps-home-banner .owl-slider .owl-item img {\n  width: 100%;\n}\n\n#homepage-7 .ps-home-banner .container {\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n#homepage-7 .ps-home-banner .container > * {\n  width: 100%;\n}\n\n#homepage-7 .ps-home-banner .container .ps-section__left {\n  max-width: calc(100% - 380px);\n  padding-right: 30px;\n}\n\n#homepage-7 .ps-home-banner .container .ps-section__right {\n  max-width: 380px;\n}\n\n#homepage-7 .ps-home-banner .container .ps-section__right .ps-collection {\n  margin-bottom: 30px;\n}\n\n#homepage-7 .ps-home-banner .container .ps-section__right .ps-collection:last-child {\n  margin-bottom: 0;\n}\n\n@media (max-width: 1199px) {\n  #homepage-7 .ps-home-banner .container {\n    flex-flow: column wrap;\n  }\n  #homepage-7 .ps-home-banner .container .ps-section__left {\n    max-width: 100%;\n    margin-bottom: 30px;\n    padding-right: 0;\n  }\n  #homepage-7 .ps-home-banner .container .ps-section__right {\n    width: 100%;\n    max-width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n  }\n  #homepage-7 .ps-home-banner .container .ps-section__right .ps-collection {\n    width: 100%;\n    max-width: 50%;\n    margin: 0 10px;\n  }\n}\n\n#homepage-7 .ps-top-categories h3 {\n  font-size: 24px;\n}\n\n#homepage-7 .ps-promotions {\n  padding: 40px 0;\n}\n\n@media (max-width: 767px) {\n  #homepage-7 .ps-promotions .ps-collection {\n    margin-bottom: 30px;\n  }\n}\n\n#homepage-7 .ps-product-list {\n  margin-bottom: 50px;\n}\n\n#homepage-7 .ps-deal-of-day .ps-product .ps-product__price {\n  color: #690;\n  font-size: 18px;\n}\n\n#homepage-7 .ps-deal-of-day .ps-product .ps-product__price del {\n  margin-left: 10px;\n  font-size: 14px;\n}\n\n#homepage-7 .ps-deal-of-day .ps-product .ps-product__price small {\n  margin-left: 10px;\n  color: red;\n}\n\n#homepage-7 .ps-home-blog {\n  padding-top: 50px;\n  padding-bottom: 70px;\n  background-color: #f5f5f5;\n}\n\n#homepage-7 .ps-home-blog .ps-block--recent-viewed {\n  padding-top: 70px;\n  border-top: 1px solid #e3e3e3;\n}\n",".header--electronic {\r\n    background-color: #022335;\r\n\r\n    .header__extra {\r\n        i {\r\n            color: #ffffff;\r\n        }\r\n\r\n        span {\r\n            background-color: $color-electronic;\r\n\r\n            i {\r\n                color: #ffffff;\r\n            }\r\n        }\r\n\r\n        &:hover {\r\n            > i {\r\n                color: $color-electronic;\r\n            }\r\n\r\n            span {\r\n                color: $color-electronic;\r\n            }\r\n        }\r\n    }\r\n\r\n    .ps-block--user-header {\r\n        i {\r\n            color: #ffffff;\r\n        }\r\n\r\n        a {\r\n            color: #ffffff;\r\n\r\n            &:hover {\r\n                color: $color-electronic;\r\n            }\r\n        }\r\n    }\r\n\r\n    .ps-form--quick-search {\r\n        input {\r\n            border-right: none;\r\n        }\r\n\r\n        button {\r\n            background-color: $color-electronic;\r\n            color: #ffffff;\r\n        }\r\n    }\r\n\r\n    .header__top {\r\n        background-color: #022335;\r\n\r\n        .header__left {\r\n            p {\r\n                color: #ffffff;\r\n            }\r\n        }\r\n\r\n        .header__top-links {\r\n            > li {\r\n                > a {\r\n                    color: #ffffff;\r\n                }\r\n            }\r\n\r\n            .ps-dropdown {\r\n                > a {\r\n                    color: #ffffff;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .header__content {\r\n        background-color: #022335;\r\n\r\n        .menu--product-categories {\r\n            display: block;\r\n\r\n            .menu__toggle {\r\n                i {\r\n                    color: #ffffff;\r\n                }\r\n\r\n                span {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .navigation {\r\n        background-color: #022335;\r\n    }\r\n\r\n    .menu--electronic {\r\n        > li {\r\n            > a {\r\n                color: #ffffff;\r\n                font-size: 16px;\r\n                text-transform: uppercase;\r\n                font-weight: 600;\r\n\r\n                i {\r\n                    vertical-align: middle;\r\n                    margin-right: 6px;\r\n                    font-size: 20px;\r\n                }\r\n\r\n                &:hover {\r\n                    color: $color-electronic;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &.header--sticky {\r\n        .header__content {\r\n            background-color: #022335;\r\n\r\n            .menu--product-categories {\r\n\r\n                .menu__toggle {\r\n                    span {\r\n                        display: block;\r\n                        color: #ffffff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.header--mobile {\r\n    &.electronic {\r\n        background-color: #fff;\r\n\r\n        .ps-cart--mini {\r\n            text-align: left;\r\n        }\r\n\r\n        .header__actions {\r\n            .ps-cart--mini {\r\n                > a {\r\n                    color: #ffffff;\r\n\r\n                    span {\r\n                        background-color: $color-electronic;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .ps-block--user-header {\r\n                .ps-block__left {\r\n                    i {\r\n                        color: #ffffff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .navigation--mobile {\r\n            background-color: #022335;\r\n        }\r\n\r\n        .ps-search--mobile {\r\n            background-color: $color-electronic;\r\n        }\r\n    }\r\n}\r\n\r\n.navigation--list {\r\n    .navigation__item {\r\n        &.active, &:focus, &:active, &:hover {\r\n            i, span {\r\n\r\n                color: $color-electronic;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.ps-panel--sidebar {\r\n    .ps-panel__header {\r\n        background-color: $color-electronic;\r\n    }\r\n}\r\n",".ps-banner--furniture {\r\n    position: relative;\r\n\r\n    h4 {\r\n        margin-bottom: 20px;\r\n        font-size: 16px;\r\n        line-height: 20px;\r\n        font-weight: 400;\r\n        color: rgb(0, 152, 206);\r\n    }\r\n\r\n    h3 {\r\n        font-size: 36px;\r\n        font-weight: 300;\r\n        line-height: 1.2em;\r\n\r\n        strong {\r\n            font-weight: 600;\r\n            color: rgb(102, 153, 0);\r\n        }\r\n    }\r\n\r\n    .ps-btn {\r\n        margin-top: 20px;\r\n        padding: 12px 24px;\r\n    }\r\n\r\n    .ps-banner__content {\r\n        max-width: 1200px;\r\n        width: 100%;\r\n        @include center();\r\n        padding-left: 140px;\r\n\r\n    }\r\n\r\n    @media (max-width: 1680px) {\r\n        h4 {\r\n            margin-bottom: 10px;\r\n        }\r\n        h3 {\r\n            font-size: 40px;\r\n            line-height: 1.2em;\r\n        }\r\n    }\r\n    @media (max-width: 1366px) {\r\n        h4 {\r\n            margin-bottom: 10px;\r\n            font-size: 16px;\r\n        }\r\n        h3 {\r\n            font-size: 40px;\r\n\r\n            br {\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n    @include media(\"<lg\") {\r\n        min-height: 400px;\r\n        img {\r\n            display: none;\r\n            @include hidden;\r\n        }\r\n        .ps-banner__content {\r\n            padding: 0 30px;\r\n        }\r\n    }\r\n    @include media(\"<xs\") {\r\n        h3 {\r\n            font-size: 24px;\r\n        }\r\n        p {\r\n            font-size: 12px;\r\n        }\r\n    }\r\n}","@mixin prefix($property, $value) {\r\n    -webkit-#{$property}: #{$value};\r\n    -moz-#{$property}: #{$value};\r\n    -ms-#{$property}: #{$value};\r\n    // -o-#{$property}: #{$value};\r\n    #{$property}: #{$value};\r\n}\r\n\r\n@mixin user-select($vals: none) {\r\n    @include prefix(\"user-select\", $vals);\r\n}\r\n\r\n@mixin border-radius($radius: 5px) {\r\n    @include prefix(\"border-radius\", $radius);\r\n}\r\n\r\n@mixin box-shadow($vals) {\r\n    @include prefix(\"box-shadow\", $vals);\r\n}\r\n\r\n@mixin backface($vals: hidden) {\r\n    @include prefix(\"backface-visibility\", $vals);\r\n}\r\n\r\n@mixin perspective($vals) {\r\n    @include prefix(\"perspective\", $vals);\r\n}\r\n\r\n@mixin max-area($index: 10) {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: $index;\r\n}\r\n\r\n@mixin hidden() {\r\n    visibility: hidden;\r\n    opacity: 0\r\n}\r\n\r\n@mixin show() {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n\r\n// Vertical centering.\r\n// Note: You should set parent element: transform-style: preserve-3d;\r\n// @see http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/\r\n@mixin vertical-align($position: absolute) {\r\n    position: $position;\r\n    top: 50%;\r\n    @include transform(translateY(-50%));\r\n}\r\n\r\n/// Horizontal, vertical or absolute centering.\r\n@mixin center($width: null, $height: null) {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    @if not $width and not $height {\r\n        @include transform(translate(-50%, -50%));\r\n    } @else if $width and $height {\r\n        width: $width;\r\n        height: $height;\r\n        margin-top: -($width / 2);\r\n        margin-left: -($height / 2);\r\n    } @else if not $height {\r\n        margin-left: -($width / 2);\r\n        @include transform(translateY(-50%));\r\n        width: $width;\r\n    } @else {\r\n        margin-top: -($height / 2);\r\n        @include transform(translateX(-50%));\r\n        height: $height;\r\n    }\r\n}\r\n\r\n@mixin font-general($font-family: arial, $font-size: 14, $font-weight: 400, $line-height: 1.5em) {\r\n    font-family: $font-family;\r\n    font-size: $font-size;\r\n    font-weight: $font-weight;\r\n    line-height: $line-height;\r\n}\r\n\r\n@mixin circle($width, $background) {\r\n    width: $width;\r\n    height: $width;\r\n    @include border-radius(50%);\r\n    background-color: $background;\r\n}\r\n\r\n@mixin checkbox-color($color) {\r\n    label {\r\n        &:before {\r\n            background-color: $color;\r\n        }\r\n    }\r\n    input[type=checkbox]:checked ~ label {\r\n        &:before {\r\n            background-color: $color;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin radio-color($color) {\r\n    label {\r\n        &:before {\r\n            background-color: $color;\r\n        }\r\n    }\r\n    input[type=radio]:checked ~ label {\r\n        background-color: rgba($color, .5);\r\n\r\n        &:before {\r\n            background-color: darken($color, 10%);\r\n        }\r\n    }\r\n}\r\n\r\n@mixin checkbox-color($color) {\r\n    label {\r\n        &:before {\r\n            background-color: $color;\r\n        }\r\n    }\r\n    input[type=checkbox]:checked ~ label {\r\n\r\n        &:before {\r\n            background-color: $color;\r\n            border: 2px solid rgba(#000, .2);\r\n        }\r\n    }\r\n}\r\n\r\n@mixin section-standard() {\r\n    padding: 70px 0;\r\n    @include media(\"<sm\") {\r\n        padding: 45px 0;\r\n    }\r\n    @include media(\"<xs\") {\r\n        padding: 35px 0;\r\n    }\r\n}","@charset \"UTF-8\";\r\n\r\n/// A mixin for generating vendor prefixes on non-standardized properties.\r\n///\r\n/// @param {String} $property\r\n///   Property to prefix\r\n///\r\n/// @param {*} $value\r\n///   Value to use\r\n///\r\n/// @param {List} $prefixes\r\n///   Prefixes to define\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include prefixer(border-radius, 10px, webkit ms spec);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     -webkit-border-radius: 10px;\r\n///     -moz-border-radius: 10px;\r\n///     border-radius: 10px;\r\n///   }\r\n///\r\n/// @require {variable} $prefix-for-webkit\r\n/// @require {variable} $prefix-for-mozilla\r\n/// @require {variable} $prefix-for-microsoft\r\n/// @require {variable} $prefix-for-opera\r\n/// @require {variable} $prefix-for-spec\r\n\r\n@mixin prefixer($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit {\r\n      @if $prefix-for-webkit {\r\n        -webkit-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == moz {\r\n      @if $prefix-for-mozilla {\r\n        -moz-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == ms {\r\n      @if $prefix-for-microsoft {\r\n        -ms-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == o {\r\n      @if $prefix-for-opera {\r\n        -o-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == spec {\r\n      @if $prefix-for-spec {\r\n        #{$property}: $value;\r\n      }\r\n    } @else  {\r\n      @warn \"Unrecognized prefix: #{$prefix}\";\r\n    }\r\n  }\r\n}\r\n\r\n@mixin disable-prefix-for-all() {\r\n  $prefix-for-webkit:    false !global;\r\n  $prefix-for-mozilla:   false !global;\r\n  $prefix-for-microsoft: false !global;\r\n  $prefix-for-opera:     false !global;\r\n  $prefix-for-spec:      false !global;\r\n}\r\n","@charset 'UTF-8';\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.2\r\n//\r\n//                http://include-media.com\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n\r\n$breakpoints: (\r\n  'tn': 320px,\r\n  'xs': 480px,\r\n  'sm': 768px,\r\n  'md': 992px,\r\n  'lg': 1200px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if log('..') {}` or `$_: log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      // scss-lint:disable SpaceAroundOperator\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if log(..) {}` instead.\r\n  $_: log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if log(..) {}` instead.\r\n    $_: log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: str-slice($value, 1, 1) == '-';\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  @for $i from if($minus, 2, 1) through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  // scss-lint:disable SpaceAroundOperator\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}","#homepage-7 {\r\n    .ps-home-banner {\r\n        padding-top: 30px;\r\n        padding-bottom: 40px;\r\n\r\n        .owl-slider {\r\n            .owl-item {\r\n                img {\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n\r\n        .container {\r\n            display: flex;\r\n            flex-flow: row nowrap;\r\n\r\n            > * {\r\n                width: 100%;\r\n            }\r\n\r\n            .ps-section__left {\r\n                max-width: calc(100% - 380px);\r\n                padding-right: 30px;\r\n            }\r\n\r\n            .ps-section__right {\r\n                max-width: 380px;\r\n\r\n                .ps-collection {\r\n                    margin-bottom: 30px;\r\n\r\n                    &:last-child {\r\n                        margin-bottom: 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            @include media(\"<lg\") {\r\n\r\n                flex-flow: column wrap;\r\n                \r\n                .ps-section__left {\r\n                    max-width: 100%;\r\n                    margin-bottom: 30px;\r\n                    padding-right: 0;\r\n                }\r\n\r\n                .ps-section__right {\r\n                    width: 100%;\r\n                    max-width: 100%;\r\n                    display: flex;\r\n                    flex-flow: row nowrap;\r\n\r\n                    .ps-collection {\r\n                        width: 100%;\r\n                        max-width: 50%;\r\n                        margin: 0 10px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    .ps-top-categories {\r\n        h3 {\r\n            font-size: 24px;\r\n        }\r\n    }\r\n\r\n    .ps-promotions {\r\n        padding: 40px 0;\r\n\r\n        .ps-collection {\r\n            @include media(\"<sm\") {\r\n                margin-bottom: 30px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .ps-product-list {\r\n        margin-bottom: 50px;\r\n    }\r\n\r\n    .ps-deal-of-day {\r\n        .ps-product {\r\n            .ps-product__price {\r\n                color: #690;\r\n                font-size: 18px;\r\n\r\n                del {\r\n                    margin-left: 10px;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                small {\r\n                    margin-left: 10px;\r\n                    color: red;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .ps-home-blog {\r\n        padding-top: 50px;\r\n        padding-bottom: 70px;\r\n        background-color: #f5f5f5;\r\n\r\n        .ps-block--recent-viewed {\r\n            padding-top: 70px;\r\n            border-top: 1px solid #e3e3e3;\r\n        }\r\n    }\r\n}"]}